const path = require('path');

module.exports = {
    env: {
        browser: true,
        es6: true,
        node: true,
    },
    extends: ['eslint:recommended', 'plugin:react/recommended'],
    parser: 'babel-eslint',
    parserOptions: {
        babelOptions: {
            configFile: path.join(__dirname, 'babel.config.js'),
        },
    },
    plugins: [
        'airtable',
        '@airtable/blocks',
        'react',
        'flowtype',
        'react-hooks',
        'import',
        'jsdoc',
    ],
    settings: {
        react: {
            version: '16.8',
        },
        jsdoc: {
            ignorePrivate: true,
            configFile: path.join(__dirname, '.eslintrc_for_docs_examples.json'),
        },
    },
    rules: {
        'array-callback-return': 'error',
        'block-scoped-var': 'error',
        'consistent-return': 'error',
        'consistent-this': ['error', 'that'],
        curly: 'error',
        'default-case': 'error',
        eqeqeq: 'error',
        'guard-for-in': 'error',
        'handle-callback-err': 'error',
        'new-parens': 'error',
        'no-array-constructor': 'error',
        'no-async-promise-executor': 'error',
        'no-buffer-constructor': 'error',
        'no-caller': 'error',
        'no-case-declarations': 'error',
        'no-catch-shadow': 'error',
        'no-console': 'error',
        'no-constant-condition': 'error',
        'no-debugger': 'error',
        'no-div-regex': 'error',
        'no-duplicate-imports': 'error',
        'no-empty': 'error',
        'no-eq-null': 'error',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-extra-boolean-cast': 'error',
        'no-extra-label': 'error',
        'no-extra-semi': 'error',
        'no-global-assign': 'error',
        'no-implicit-globals': 'error',
        'no-implied-eval': 'error',
        'no-iterator': 'error',
        'no-label-var': 'error',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-loop-func': 'error',
        'no-mixed-requires': 'error',
        'no-multi-str': 'error',
        'no-native-reassign': 'error',
        'no-new-object': 'error',
        'no-new-require': 'error',
        'no-new-wrappers': 'error',
        'no-octal-escape': 'error',
        'no-path-concat': 'error',
        'no-proto': 'error',
        'no-prototype-builtins': 'error',
        'no-redeclare': 'error',
        'no-regex-spaces': 'error',
        'no-script-url': 'error',
        'no-self-assign': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-shadow-restricted-names': 'error',
        'no-shadow': 'error',
        'no-sparse-arrays': 'error',
        'no-template-curly-in-string': 'error',
        'no-throw-literal': 'error',
        'no-undef-init': 'error',
        'no-undef': 'off',
        'no-unneeded-ternary': 'error',
        'no-unreachable': 'error',
        'no-unsafe-negation': 'error',
        'no-unused-expressions': 'error',
        'no-unused-vars': ['error', {vars: 'all', args: 'none'}],
        'no-useless-call': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-concat': 'error',
        'no-useless-constructor': 'error',
        'no-void': 'error',
        'no-with': 'error',
        'one-var-declaration-per-line': 'error',
        'prefer-spread': 'error',
        quotes: ['error', 'single', 'avoid-escape'],
        radix: 'error',
        'require-yield': 'off',
        yoda: 'error',

        'airtable/background-image-url-double-quotes': 'warn',
        'airtable/is-returns-boolean': 'warn',
        'airtable/no-missing-async-suffix': 'warn',
        'airtable/no-missing-await': 'warn',
        'airtable/no-process-domain': 'warn',
        'airtable/noopener-noreferrer': 'warn',
        '@airtable/blocks/no-throw-new': 'error',
        '@airtable/blocks/no-node-modules-invariant': 'error',
        '@airtable/blocks/no-error-interpolation': ['error', {spawnError: 0, invariant: 1}],

        'flowtype/array-style-complex-type': 'error',
        'flowtype/array-style-simple-type': 'error',
        'flowtype/define-flow-type': 'error',
        'flowtype/no-primitive-constructor-types': 'error',
        'flowtype/no-weak-types': 'warn',
        'flowtype/require-valid-file-annotation': ['error', 'always'],
        'flowtype/type-import-style': ['error', 'identifier', {ignoreTypeDefault: true}],
        'flowtype/use-flow-type': 'error',

        'jsdoc/check-alignment': 'error',
        'jsdoc/check-examples': 'error',
        'jsdoc/check-indentation': 'off',
        'jsdoc/check-param-names': 'error',
        'jsdoc/check-syntax': 'off',
        'jsdoc/check-tag-names': 'error',
        'jsdoc/check-types': 'error',
        'jsdoc/implements-on-classes': 'error',
        'jsdoc/newline-after-description': 'error',
        'jsdoc/no-types': 'off',
        'jsdoc/require-hyphen-before-param-description': ['error', 'never'],
        'jsdoc/require-jsdoc': 'warn',
        'jsdoc/require-param-name': 'warn',
        'jsdoc/require-param': 'warn',
        'jsdoc/require-returns-check': 'warn',
        'jsdoc/require-returns-description': 'warn',

        'import/first': 'error',
        'import/order': 'error',

        'react-hooks/exhaustive-deps': 'warn',
        'react-hooks/rules-of-hooks': 'error',
        'react/display-name': 'off',
        'react/jsx-boolean-value': ['error', 'always'],
        'react/no-unescaped-entities': 'off',
        'react/prop-types': ['error'],
        'react/react-in-jsx-scope': 'error',
    },
};
